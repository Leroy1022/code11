it('should log an error when getLocationList() fails', () => {
    const errorMessage = 'Error fetching the location list!!!';
    const mockUBMCommonService = jasmine.createSpyObj('UBMCommonService', ['getLocationList']);
    mockUBMCommonService.getLocationList.and.returnValue(throwError(errorMessage)); 
    component.ubmCommonService = mockUBMCommonService;
    spyOn(console, 'log');
    component.getLocationList();
    setTimeout(() => {
      expect(console.log).toHaveBeenCalledWith(errorMessage);
    }, 0);
  });


 it('should log an error when getCurrencySymbolList() fails', fakeAsync(() => {
    const errorMessage = 'Error fetching the currency list!!!';
    const mockUBMCommonService = jasmine.createSpyObj('UBMCommonService', ['getCurrencySymbolList']);
    mockUBMCommonService.getCurrencySymbolList.and.returnValue(throwError(errorMessage)); 
    component.ubmCommonService = mockUBMCommonService;
    spyOn(console, 'log');
    component.getCurrencySymbolList();
    tick();
    expect(console.log).toHaveBeenCalledWith(errorMessage);
  }));
