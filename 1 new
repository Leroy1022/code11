it('should update buildingList and CurrencyCode when getBuildingByLocation() is called ', () => {
    component.getBuildingByLocation();
    expect(component.accountDetails.BuildingId).toEqual("");
    expect(component.accountDetails.BuildingId).toEqual("");
     window.sessionStorage['UserRoleId'] = 1;
  expect(component.currencyCode).toEqual(undefined);
    expect(component.buildingList).toEqual('result'); 
    component.getSupplierAccount();

  });

it('should update supplierAccountList and related properties when getSupplierAccount is called successfully', () => {
   
   component.getSupplierAccount();
   component.supplieraccountlist = [];
    expect(component.accountDetails.IsSupplierAccount).toBe('Yes');
     expect(component.supplierAccountList.length).toBe(1);
    expect(component.supplierAccountList[0].Name).toBe('Supplier 1')
    expect(component.showSubCommodity) toEqual(true);
 });

 it('should call AddAccount when AddAccount() is called ', () => {
    component.isloading = true; 
    component.accountform = {
      reset: jasmine.createSpy('reset'), 
    };
    component.checkUBHLicense = false;
    spyOn(notifyService, 'showError');
    component.getAccountGridData();
    expect(component.startRowNum)ToEqual(1);
    component.clearForm(component.accountform);
    expect(notifyService.showSuccess).toHaveBeenCalledWith(component.Accounts.account_add_success, '');
  });
