
it('should log an error when GetAccountsMappingList () fails', ()=>{
const errorMessage = "Error fetching the AccountsMapping list!!!"; 
mockUBMService.this.GetAllDropdownLists.and.result (throwError(() =>errorMessage)); spyon(console, 'log'); 
component.GetAccountsMappingList();
expect (console.log).toHaveBeenCalledwith(errorMessage);
});

it('should populate AccountsMappingList when GetAccountsMappingList() is successful', () => {
     
    const roleId = 'test-role-id';
    const accountsMappingList = mockAccountsMappingList;
    
    ubmService.getAccountMappingList.and.returnValue(of(mockAccountsMappingList));

    componentOrService.getAccountsMapping(roleId);

    expect(ubmService.getAccountMappingList).toHaveBeenCalledWith(roleId); 
    expect(componentOrService.accountsMappingList).toEqual(mockAccountsMappingList);
  });
