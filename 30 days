983 to 985
 it('should not change actionsClicked property when toggled', () => {
    // Arrange
    const initialActionsClicked = component.actionsClicked;

    // Act
    component.toggleActionsDropdown();

    // Assert
    expect(component.actionsClicked).toBe(initialActionsClicked);
  });

987 to 989
it('should set actionsClicked to false when clicked outside actions', () => {
    // Arrange (Assume actionsClicked is initially set to true)
    component.actionsClicked = true;

    // Act
    component.clickedOutsideActions();

    // Assert
    expect(component.actionsClicked).toBe(false);

978 to 981
  it('should set actionsClicked to false', () => {
    // Arrange (Assume actionsClicked is initially set to true)
    component.actionsClicked = true;

    // Act
    component.countSelected();

    // Assert
    expect(component.actionsClicked).toBe(false);
  });

  it('should count selected items correctly', () => {
    // Arrange
    component.result = [
      { IsRowChecked: true },
      { IsRowChecked: false },
      { IsRowChecked: true },
    ];

    // Act
    component.countSelected();

    // Assert
    expect(component.selectedCount).toBe(2);
  });



  it('should reset invoiceHeader and invoiceData properties on destroy', () => {
    // Arrange
    const invoiceHeader = [
      { clickFlag: true, ISAscending: true, IsDescending: true },
      { clickFlag: false, ISAscending: true, IsDescending: false },
    ];
    const invoiceData = [
      { IsRowChecked: true },
      { IsRowChecked: false },
    ];

    component.invoiceHeader = invoiceHeader;
    component.invoiceData = invoiceData;

    // Act
    component.ngOnDestroy();

    // Assert
    expect(component.invoiceHeader[0].clickFlag).toBe(false);
    expect(component.invoiceHeader[0].ISAscending).toBe(false);
    expect(component.invoiceHeader[0].IsDescending).toBe(false);

    expect(component.invoiceHeader[1].clickFlag).toBe(false);
    expect(component.invoiceHeader[1].ISAscending).toBe(false);
    expect(component.invoiceHeader[1].IsDescending).toBe(false);

    expect(component.invoiceData[0].IsRowChecked).toBe(false);
    expect(component.invoiceData[1].IsRowChecked).toBe(false);
  });

 
