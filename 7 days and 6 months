 it('should test Building list', ()=> {
// given
const restService TestBed.inject(UBMCommonService);
const allBuildingList: buildingList[] [];
spyon(restService, 'AllBuildingList').and.returnValue(of (allBuildingList));
// when
component.getAllBuildingList();
// then
expect(component.allBuildingList.length).toBe(1);
  });  

 it('should test Provider list', ()=> {
// given
const restService = TestBed.inject(UBMCommonService);
const providerList: providerList[] = [];
spyon(restService, 'getProviderList').and.returnValue(of (providerList));
// when
component.getProviderList();
// then
expect(component.providerList.length).toBe(1);
  }); 
